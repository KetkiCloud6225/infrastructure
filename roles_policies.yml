AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template for GitHub Roles and Policies
Parameters:
  domainName:
    Description: Domain Name
    Type: String
    Default: ketkikule.me
  # cloudWatchAgentPolicyArn:
  #   Description: CloudWatchAgentServerPolicy ARN
  #   Type: String
  #   Default: arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
Resources:
  githubEc2AmiPolicyId:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: github-EC2-AMI
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ec2:AttachVolume
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:CopyImage
          - ec2:CreateImage
          - ec2:CreateKeypair
          - ec2:CreateSecurityGroup
          - ec2:CreateSnapshot
          - ec2:CreateTags
          - ec2:CreateVolume
          - ec2:DeleteKeyPair
          - ec2:DeleteSecurityGroup
          - ec2:DeleteSnapshot
          - ec2:DeleteVolume
          - ec2:DeregisterImage
          - ec2:DescribeImageAttribute
          - ec2:DescribeImages
          - ec2:DescribeInstances
          - ec2:DescribeInstanceStatus
          - ec2:DescribeRegions
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSnapshots
          - ec2:DescribeSubnets
          - ec2:DescribeTags
          - ec2:DescribeVolumes
          - ec2:DetachVolume
          - ec2:GetPasswordData
          - ec2:ModifyImageAttribute
          - ec2:ModifyInstanceAttribute
          - ec2:ModifySnapshotAttribute
          - ec2:RegisterImage
          - ec2:RunInstances
          - ec2:StopInstances
          - ec2:TerminateInstances
          Resource: "*"
      Users:
      - ghactions-app
  
  codeDeployEc2S3PolicyId:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: CodeDeploy-EC2-S3
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:Get*
          - s3:List*
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::codedeploy.${domainName}/*
          - arn:aws:s3:::aws-codedeploy-us-east-1/*
  
  # codeDeployLambdaUpdateFunctionCodePolicyId:
  #   Type: AWS::IAM::ManagedPolicy
  #   Properties:
  #     ManagedPolicyName: CodeDeploy-Lambda-UpdateFunctionCode
  #     PolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #       - Action:
  #         - lambda:UpdateFunctionCode
  #         Effect: Allow
  #         Resource:
  #           Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*
  #     Users:
  #     - ghactions-app
  
  githubS3UploadPolicyId:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: GH-Upload-To-S3
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:PutObject
          - s3:Get* #can be ignored
          - s3:List* #can be ignored
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::dev.${domainName}.codedeploy/*
      Users:
      - ghactions-app
  
  ec2ExecutionRoleId:
    Type: AWS::IAM::Role
    DependsOn: codeDeployEc2S3PolicyId
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      RoleName: EC2ExecutionRole
      ManagedPolicyArns:
      - Ref: codeDeployEc2S3PolicyId
      # - Ref: cloudWatchAgentPolicyArn
      Tags:
      - Key: Name
        Value:
          Fn::Sub: "${AWS::StackName}-EC2ExecutionRoleId"
  
  githubCodeDeployPolicyId:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: GH-Code-Deploy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - codedeploy:RegisterApplicationRevision
          - codedeploy:GetApplicationRevision
          - codedeploy:ListApplicationRevisions #can be ignored
          Resource:
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:csye6225-webapp
        - Effect: Allow
          Action:
          - codedeploy:CreateDeployment
          - codedeploy:GetDeployment
          Resource:
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:csye6225-webapp/csye6225-webapp-deployment
        - Effect: Allow
          Action:
          - codedeploy:GetDeploymentConfig
          Resource:
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce
      Users:
      - ghactions-app

Outputs:
  ec2ExecutionRoleId:
    Description: EC2 Execution Role logical Id
    Value:
      Ref: ec2ExecutionRoleId
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ec2ExecutionRoleId"
  
  ec2ExecutionRoleArn:
    Description: EC2 Execution Role Arn
    Value:
      Fn::GetAtt:
      - ec2ExecutionRoleId
      - Arn
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ec2ExecutionRoleArn"
