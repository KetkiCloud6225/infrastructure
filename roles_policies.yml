AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation Template for GitHub Roles and Policies
Parameters:
  domainName:
    Description: Domain Name
    Type: String
    Default: ketkikule.me
Resources:
  githubEc2AmiPolicyId:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: github-EC2-AMI
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - ec2:AttachVolume
          - ec2:AuthorizeSecurityGroupIngress
          - ec2:CopyImage
          - ec2:CreateImage
          - ec2:CreateKeyPair
          - ec2:CreateSecurityGroup
          - ec2:CreateSnapshot
          - ec2:CreateTags
          - ec2:CreateVolume
          - ec2:DeleteKeyPair
          - ec2:DeleteSecurityGroup
          - ec2:DeleteSnapshot
          - ec2:DeleteVolume
          - ec2:DeregisterImage
          - ec2:DescribeImageAttribute
          - ec2:DescribeImages
          - ec2:DescribeInstances
          - ec2:DescribeInstanceStatus
          - ec2:DescribeRegions
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSnapshots
          - ec2:DescribeSubnets
          - ec2:DescribeTags
          - ec2:DescribeVolumes
          - ec2:DetachVolume
          - ec2:GetPasswordData
          - ec2:ModifyImageAttribute
          - ec2:ModifyInstanceAttribute
          - ec2:ModifySnapshotAttribute
          - ec2:RegisterImage
          - ec2:RunInstances
          - ec2:StopInstances
          - ec2:TerminateInstances
          Resource: "*"
      Users:
      - ghactions-app
  
  codeDeployEc2S3PolicyId:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: CodeDeploy-EC2-S3
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:GetObject
          - s3:ListObject
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::prod.${domainName}.codedeploy/*
          - arn:aws:s3:::aws-codedeploy-us-east-1/*
  
  githubS3UploadPolicyId:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: GH-Upload-To-S3
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:PutObject
          - s3:GetObject 
          - s3:ListObject
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:s3:::prod.${domainName}.codedeploy/*
      Users:
      - ghactions-app
  
  ec2ExecutionRoleId:
    Type: AWS::IAM::Role
    DependsOn: codeDeployEc2S3PolicyId
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      RoleName: EC2ExecutionRole
      ManagedPolicyArns:
      - Ref: codeDeployEc2S3PolicyId            
      - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Tags:
      - Key: Name
        Value:
          Fn::Sub: "${AWS::StackName}-EC2ExecutionRoleId"
  
  githubCodeDeployPolicyId:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: GH-Code-Deploy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - codedeploy:RegisterApplicationRevision
          - codedeploy:GetApplicationRevision
          - codedeploy:ListApplicationRevisions 
          Resource:
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:application:csye6225-webapp
        - Effect: Allow
          Action:
          - codedeploy:CreateDeployment
          - codedeploy:GetDeployment
          Resource:
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:csye6225-webapp/csye6225-webapp-deployment
        - Effect: Allow
          Action:
          - codedeploy:GetDeploymentConfig
          Resource:
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.OneAtATime
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.HalfAtATime
          - Fn::Sub: arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentconfig:CodeDeployDefault.AllAtOnce
      Users:
      - ghactions-app

  SNSTopic:
    Type: AWS::SNS::Topic
    DependsOn: LambdaFunction
    Properties: 
      DisplayName: "csye6225"
      TopicName: "csye6225-topic"
      Subscription:
        - Endpoint: !GetAtt LambdaFunction.Arn
          Protocol: lambda

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "csye6225-spring2022"
      MemorySize: 512
      Handler: "index.handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
          S3Bucket: "prod.ketkikule.me.codedeploy"
          S3Key: "SNS.zip"
      Runtime: "nodejs14.x"
      Timeout: 180

  PermissionSNStoLambda:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref LambdaFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref SNSTopic

#Lambda Execution Role
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      # ManagedPolicyArns:
      # - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole


  LambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaDynamoDBPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:PutLogEvents
              - logs:GetLogEvents
              - logs:CreateLogStream
            Resource:
              - arn:aws:logs:us-east-1:257878682470:*
          - Effect: Allow
            Action:
              - ses:SendEmail
              - ses:SendRawEmail
            Resource:
              - "arn:aws:ses:us-east-1:257878682470:identity/prod.ketkikule.me"  
      Roles:
        - !Ref LambdaExecutionRole
            
  DynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
          - 
            AttributeName: "username"
            AttributeType: "S"
          - 
            AttributeName: "token"
            AttributeType: "S"
      KeySchema: 
          -
            AttributeName : "username"
            KeyType : "HASH"
          -
            AttributeName : "token"
            KeyType : "RANGE"
      TableName: "csye6225"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      TimeToLiveSpecification:
        AttributeName: "TimeToLive"
        Enabled: TRUE

  DynamoDBPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: DynamoDBPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:GetItem
            Resource:
              - !GetAtt DynamoDB.Arn
      Roles:
        - !Ref LambdaExecutionRole
        - !Ref ec2ExecutionRoleId

  EC2SNSPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EC2SNSPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sns:Publish
              - sns:GetTopicAttributes
              - sns:ListTopics
            Resource:
              - "*"
      Roles:
        - !Ref ec2ExecutionRoleId

  keyForRDSEncryption:
    Type: 'AWS::KMS::Key'
    Properties:
      Description: RDS key for encryption
      PendingWindowInDays: 10
      KeyPolicy:
        Version: 2012-10-17
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: 'arn:aws:iam::257878682470:root'
          Action: 'kms:*'
          Resource: '*'
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: 
            - 'arn:aws:iam::257878682470:user/ghactions-app'
            - 'arn:aws:iam::257878682470:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling'
          Action:
          - 'kms:Create*'
          - 'kms:Describe*'
          - 'kms:Enable*'
          - 'kms:List*'
          - 'kms:Put*'
          - 'kms:Update*'
          - 'kms:Revoke*'
          - 'kms:Disable*'
          - 'kms:Get*'
          - 'kms:Delete*'
          - 'kms:ScheduleKeyDeletion'
          - 'kms:CancelKeyDeletion'
          Resource: '*'
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS: 
            - 'arn:aws:iam::257878682470:user/ghactions-app'
            - 'arn:aws:iam::257878682470:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling'
            - 'arn:aws:iam::257878682470:root'
          Action:
          - 'kms:DescribeKey'
          - 'kms:Encrypt'
          - 'kms:Decrypt'
          - 'kms:ReEncrypt*'
          - 'kms:GenerateDataKey'
          - 'kms:GenerateDataKeyWithoutPlaintext'
          Resource: '*'
        - Sid: Allow attachment of persistent resources
          Effect: Allow
          Principal:
            AWS:
            - 'arn:aws:iam::257878682470:user/ghactions-app'
            - 'arn:aws:iam::257878682470:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling'
            - 'arn:aws:iam::257878682470:root'
          Action:
          - kms:CreateGrant
          - kms:ListGrants
          - kms:RevokeGrant
          Resource: "*"
          Condition:
            Bool:
              kms:GrantIsForAWSResource: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Sub: "${AWS::StackName}-keyForRDSEncryption"

  keyForEC2Encryption:
    Type: 'AWS::KMS::Key'
    Properties:
      Description: EC2 key for encryption
      PendingWindowInDays: 10
      KeyPolicy:
        Version: 2012-10-17
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: 'arn:aws:iam::257878682470:root'
          Action: 'kms:*'
          Resource: '*'
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: 
            - 'arn:aws:iam::257878682470:user/ghactions-app'
            - 'arn:aws:iam::257878682470:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling'
          Action:
          - 'kms:Create*'
          - 'kms:Describe*'
          - 'kms:Enable*'
          - 'kms:List*'
          - 'kms:Put*'
          - 'kms:Update*'
          - 'kms:Revoke*'
          - 'kms:Disable*'
          - 'kms:Get*'
          - 'kms:Delete*'
          - 'kms:ScheduleKeyDeletion'
          - 'kms:CancelKeyDeletion'
          Resource: '*'
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS: 
            - 'arn:aws:iam::257878682470:user/ghactions-app'
            - 'arn:aws:iam::257878682470:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling'
            - 'arn:aws:iam::257878682470:root'
          Action:
          - 'kms:DescribeKey'
          - 'kms:Encrypt'
          - 'kms:Decrypt'
          - 'kms:ReEncrypt*'
          - 'kms:GenerateDataKey'
          - 'kms:GenerateDataKeyWithoutPlaintext'
          Resource: '*'
        - Sid: Allow attachment of persistent resources
          Effect: Allow
          Principal:
            AWS:
            - 'arn:aws:iam::257878682470:user/ghactions-app'
            - 'arn:aws:iam::257878682470:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling'
            - 'arn:aws:iam::257878682470:root'
          Action:
          - kms:CreateGrant
          - kms:ListGrants
          - kms:RevokeGrant
          Resource: "*"
          Condition:
            Bool:
              kms:GrantIsForAWSResource: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Sub: "${AWS::StackName}-keyForEC2Encryption"        


Outputs:
  ec2ExecutionRoleId:
    Description: EC2 Execution Role logical Id
    Value:
      Ref: ec2ExecutionRoleId
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ec2ExecutionRoleId"
  
  ec2ExecutionRoleArn:
    Description: EC2 Execution Role Arn
    Value:
      Fn::GetAtt:
      - ec2ExecutionRoleId
      - Arn
    Export:
      Name:
        Fn::Sub: "${AWS::StackName}-ec2ExecutionRoleArn"
